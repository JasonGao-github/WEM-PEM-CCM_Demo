1.添加了一个分页查询的框架，请重新更新整个项目。
2.common.page包中包含了分页查询三个需要用到的类。
3.demo包中放了我最新开发的分页查询demo。看懂这个demo以后，开发project列表页面，包括查询、列表展示、搜索及分页等功能。
4.代码写好之后直接提交到项目当中来，branch先不用管。
5.写好之后如果还有时间，就和前端人员调试开发过的功能。

---------------------

1，开发一个接口，返回所有的projectType（包含其id和name）。
2. 与前端调试开发好的接口。
3.暂时不考虑branch，等这一波功能都测试完成了再分。
4.project中增加了一个version字段，请更新到数据库脚本和数据库中。
5.添加了几个entity，更新到sql文件中。

---------------------
周四前后完成：
1.又更新了一波entity，同样的更新到sql脚本和数据库。

2.开发一个接口，往CurrentOccupy表里插入新数据。
3.开发一个接口，根据projectId查询对应的CurrentOccupy
4.开发一个接口，根据userId和projectId删除对应的CurrentOccupy数据。

5.开发一个接口，往Notice里插入数据。
6.开发Notice表的Dao，包括这2个方法：
（1）插入数据
（2）根据收件人查询所有的Notice

--------------------
周五周六前后完成：
1.findpage那个包里面是查询项目列表吗？如果是，移到project包里，findpage包删掉。
CurrentOccupyPojo放到pojo包里，之前所在的包删掉。另外注意包名都是纯小写。
2.封装了一个发送邮件的工具类，可以先熟悉熟悉。
3.添加了entity，应该是最后一波了。添加到数据库脚本里。
-------------------

周六至周一完成：
1.开发一个接口，根据user type 查询user
2.开发一个接口，查询这个用户下属的所有用户（leader id）
3.开发一个接口，往CICauthorisation表中插入数据。要求动态添加（前端如果只传一个人的签名就添加一条数据，传两个人就添加两条数据，三个人就插入三条。以此类推。。）
4.开发一个接口，实现对CICauthorisation的更新操作，同样要求实现动态更新。